const a={email:{lengthMin:6,lengthMax:50,tests:[{occurences:1,regexp:new RegExp(/^\S+@\S+.\S+$/),description:"letters, digits, specials and @ char"}]},password:{lengthMin:8,lengthMax:24,tests:[{occurences:1,regexp:new RegExp(/[A-Z]/g),description:"capitals: [1]"},{occurences:3,regexp:new RegExp(/[a-z]/g),description:"letters: [3]"},{occurences:3,regexp:new RegExp(/[\d]/g),description:"digits: [3]"},{occurences:1,regexp:new RegExp(/[\W]/g),description:"specials: [1]"}]}},o=s=>{const{lengthMin:n,lengthMax:c,tests:e}=a[s],t=e.map(({description:l})=>`${l}`).join(", ");return`Total length ${`(${n}-${c})`}. 
Must consist of: ${t}.`},g=(s,n)=>{const c=s.length<=a[n].lengthMax&&s.length>=a[n].lengthMin,e=a[n].tests.reduce((t,{occurences:i,regexp:r})=>t&&(s.match(r)||[]).length>=i,!0);return{[n]:{content:e,length:c}}},p=(s,n)=>{const c=g(n,s)[s];return c.content&&c.length},h=(s,n,c=n)=>{let e=!0,t="";const{password:i}=g(n,"password"),{email:r}=g(s,"email");if(!r.length)return e=!1,t+="Wrong email length.",{isValid:e,message:t};if(!i.length)return e=!1,t+="Wrong password length. ",{isValid:e,message:t};if(r.content||(e=!1,t+="Wrong email pattern. "),i.content||(e=!1,t+="Wrong password pattern. "),n&&c){if(n!==c)return e=!1,t+="Passwords does not match. ",{isValid:e,message:t}}else return e=!1,t+="Password not provided. ",{isValid:e,message:t};return{isValid:e,message:e?"Credentials are error-free. Sending...":t}};export{h as a,o as g,p as v};
